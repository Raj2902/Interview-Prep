Q1) What is the default stale time and gcTime of your React query?
Ans : Default stale time of react query is 0 it becomes stale as soon as the query is hit.
Deafault gcTime is 5min.

DOUT (cleared): gcTime ka usecase kya hai?
Ans : cache memory me data kabtak zinda rahega.
agar cache me data hai he nhi tou api se data manga jega.

Understand these extreme level scenarios for best undestanding : 
1)If the stale time is over and gcTime is still there. What will happen?
Ans: API will be refetched as the data is stale now, but we will see old cache data in the ui as the gcTime is still there but if the reponse from the api is new
the cache data is replaced by the new one. benifit : ux optimized and ram optimized.
2)If the stale time is there but the gcTime is not there the api still be refetched as there is no data to show in the cache.

refetched is triggered if the data is stale or there is no data in the cache.

Q2) Difference between gcTime and stale Time?
Ans : stale Time : Data kab tak fresh hai agar stale time pura hogaya tou api refetch ho jaegi manually ya automatically.
gcTime : Data cache me kab tab rahe.

Q3) How react query shows you always the lastest data though taking the data from the cache if the stale time has not ended?
Ans: Cache in react query is replaced by the lastest data if the response from the api changes, understand it like it an query got hit with the same queryKey with the cache data, so it will show the cached data but if the response from the api
is diffrent from the previous one the cache data changes to show the latest data, the api gets hit everytime.


Q4) What is the diffrence between isPending, isFetching and isLoading in react Query?
Ans : isPending : It results true when there is cache data in the query and the api is getting hit if the response is diffrent cache data changes.
isLoading : Hits initially when the api hits for the first time then the cache data is used until its replaced by the new data form the api response.
isFetching : If any query is getting fetched in the background.

Q5) What are dev tools in reactQuery and how to use them, how to implement in your react+tanstack project?

Q6) Whats is Polling? If you want to implement it how will you?
Ans : Data fetching at a regular interval of time for the data to be upto date.
using reftchInterval : It refetched data after every interval the time is specified.
using refetchIntervalBackground : It refetched data after every interval set true is specified but in background too, even if the component is unmounted or the window is changed.

DOUT CLEARED : If i use a refetchIntervalBackground set to true time specified for reftchInterval 1min and go off from the site for one hour would the api be hit 60 times though i left the site closed the tab closed my system?

Jab hum tab close kar dete ho, ya system shutdown/sleep me chala jaata hai:
React Query ka JS code hi run nahi ho raha hota.
Tab browser ke event loop aur timers bhi pause ho jaate hain.
React Query ki refetching ruk jaati hai.
To API hit nahi hoti, chahe refetchInterval laga ho.

Q7)What is react query ?
Ans: It is use for asynchronus Server-side state management.

Q8)How to use react query for getting individual data based on id?
Ans : By using react query when you give queryKey use key as ['name',id]
in this way for every new id the query will hit to get a new data.

Q9) How to implement pagination using react query?
Ans : 

Q10) If you dont want to use loading text and insted show the prev's data as it is not a good ui experience how can you do that?
Ans : Use placeholder provided for useQuery and give value as keepPreviousData then it will show the prev data unitl the new data has come.

Q11) How to cancel api call in react using react query?
Ans : Use singal queryFn gives a parameter signal use that after your api url in axios or in fetch whatever you are using.
